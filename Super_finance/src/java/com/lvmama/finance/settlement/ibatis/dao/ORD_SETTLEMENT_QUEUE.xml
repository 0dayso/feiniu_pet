<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ORD_SETTLEMENT_QUEUE">
	<resultMap id="BaseResultMap" class="com.lvmama.finance.settlement.ibatis.po.OrdSettlementQueue">
		<result column="SETTLEMENT_QUEUE_ID" property="settlementQueueId" />
		<result column="META_PRODUCT_ID" property="metaProductId" />
		<result column="CURRENT_AMOUNT" property="currentAmount" />
		<result column="HISTORY_AMOUNT" property="historyAmount" />
		<result column="TARGET_ID" property="targetId" />
	</resultMap>
	
	<!-- 插入结算队列项 ,新增字段：状态（默认NORMAL）、提前结算天数（冗余结算对象中的字段）、已打款金额（默认0）-->
	<insert id="aotuInsertSettlementQueueItem">
		INSERT INTO 
			ORD_SETTLEMENT_QUEUE_ITEM
		(
		  SETTLEMENT_QUEUE_ITEM_ID,
		  ORDER_ITEM_META_ID,
		  CREATE_TIME,
		  DELETED,
		  STATUS,
		  PAYMENT_TARGET,
		  ADVANCED_DAYS,
		  PAYED_AMOUNT,
		  SETTLEMENT_TYPE
		)
		SELECT 
			ORD_SETTLEMENT_QUEUE_IM_ID_SEQ.NEXTVAL,
		TMP.* FROM (
			SELECT DISTINCT
				A.ORDER_ITEM_META_ID AS ORDER_ITEM_META_ID,
		    	SYSDATE AS CREATE_TIME,
			    'false' AS DELETED,
			    'NORMAL' AS STATUS,
			    A.PAYMENT_TARGET AS PAYMENT_TARGET,
			    D.ADVANCED_DAYS AS ADVANCED_DAYS,
			    0 AS PAYED_AMOUNT,
			    DECODE(A.SUB_PRODUCT_TYPE, 'INSURANCE', 'ORDER',DECODE(E.TRAVEL_GROUP_CODE, NULL, 'ORDER', 'GROUP'))
			FROM
				ORD_ORDER_ITEM_META A,
      			META_SETTLEMENT C,
				SUP_SETTLEMENT_TARGET D,
      			ORD_SETTLEMENT_QUEUE_ITEM B,
      			ORD_ORDER E
			WHERE
      			A.META_PRODUCT_ID = C.META_PRODUCT_ID
    		AND
      			C.TARGET_ID = D.TARGET_ID
    		AND
    			A.ORDER_ITEM_META_ID = B.ORDER_ITEM_META_ID(+)
			AND
				A.ORDER_ID = E.ORDER_ID 
			AND
				D.SETTLEMENT_PERIOD &lt;&gt; 'PERORDER'
			AND
			    ((E.PAYMENT_STATUS = 'PAYED' AND E.APPROVE_STATUS='VERIFIED')  OR A.PAYMENT_TARGET = 'TOSUPPLIER')
    		AND
				A.VISIT_TIME = TRUNC(SYSDATE-1)
    		AND 
    			E.ORDER_STATUS IN ('NORMAL', 'FINISHED') 
    		AND
      			B.ORDER_ITEM_META_ID IS NULL
      		AND
            	A.SETTLEMENT_STATUS = 'UNSETTLEMENTED'
            AND 
            	(
            		E.TRAVEL_GROUP_CODE IS NULL 
            	OR
            		A.SUB_PRODUCT_TYPE = 'INSURANCE'
         		OR 
            		EXISTS (SELECT 1 FROM OP_TRAVEL_GROUP OTG,PROD_ROUTE PR WHERE OTG.TRAVEL_GROUP_CODE = E.TRAVEL_GROUP_CODE AND OTG.PRODUCT_ID = PR.PRODUCT_ID AND PR.GROUP_TYPE = 'AGENCY')
            	)
      	)TMP
	</insert>
	<insert id="aotuInsertPermOrderSettlementQueueItem">
		INSERT INTO 
			ORD_SETTLEMENT_QUEUE_ITEM
		(
		  SETTLEMENT_QUEUE_ITEM_ID,
		  ORDER_ITEM_META_ID,
		  CREATE_TIME,
		  DELETED,
		  STATUS,
		  PAYMENT_TARGET,
		  ADVANCED_DAYS,
		  PAYED_AMOUNT,
		  SETTLEMENT_TYPE
		)
		SELECT 
			ORD_SETTLEMENT_QUEUE_IM_ID_SEQ.NEXTVAL,
		TMP.* FROM (
			 SELECT DISTINCT 
				A.ORDER_ITEM_META_ID AS ORDER_ITEM_META_ID, 
				SYSDATE AS CREATE_TIME, 
				'false' AS DELETED, 
				'NORMAL' AS STATUS, 
				A.PAYMENT_TARGET AS PAYMENT_TARGET, 
				D.ADVANCED_DAYS AS ADVANCED_DAYS, 
				0 AS PAYED_AMOUNT ,
				DECODE(A.SUB_PRODUCT_TYPE, 'INSURANCE', 'ORDER',DECODE(E.TRAVEL_GROUP_CODE, NULL, 'ORDER', 'GROUP'))
				FROM 
				ORD_ORDER_ITEM_META A, 
				META_SETTLEMENT C, 
				SUP_SETTLEMENT_TARGET D, 
				ORD_ORDER E
			WHERE 
				A.META_PRODUCT_ID = C.META_PRODUCT_ID 
			AND 
				C.TARGET_ID = D.TARGET_ID 
			AND 
				A.ORDER_ID = E.ORDER_ID 
			AND 
				D.SETTLEMENT_PERIOD = 'PERORDER' 
			AND 
				( E.PAYMENT_STATUS = 'PAYED' AND E.APPROVE_STATUS='VERIFIED' and E.PAYMENT_TIME &gt;= SYSDATE-10
				OR 
				(A.PAYMENT_TARGET = 'TOSUPPLIER' AND E.CREATE_TIME &gt;= SYSDATE-10) 
			) 
			AND 
				E.ORDER_STATUS IN ('NORMAL', 'FINISHED') 
			AND
            	A.SETTLEMENT_STATUS = 'UNSETTLEMENTED'
			AND NOT EXISTS 
				(SELECT 1 FROM ORD_SETTLEMENT_QUEUE_ITEM I WHERE I.ORDER_ITEM_META_ID=A.ORDER_ITEM_META_ID) 
			AND 
				(
					E.TRAVEL_GROUP_CODE IS NULL 
				OR
            		A.SUB_PRODUCT_TYPE = 'INSURANCE'
				OR 
					EXISTS (SELECT 1 FROM OP_TRAVEL_GROUP OTG,PROD_ROUTE PR WHERE OTG.TRAVEL_GROUP_CODE = E.TRAVEL_GROUP_CODE AND OTG.PRODUCT_ID = PR.PRODUCT_ID AND PR.GROUP_TYPE = 'AGENCY')
				)
      	)TMP
	</insert>
</sqlMap>
