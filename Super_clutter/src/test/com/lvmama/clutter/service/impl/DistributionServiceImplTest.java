package com.lvmama.clutter.service.impl;

import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.NoSuchAlgorithmException;

import org.dom4j.io.SAXReader;
import org.junit.Test;

import com.lvmama.comm.utils.MD5;
import com.lvmama.distribution.client.WebServiceClient;
import com.lvmama.distribution.util.DistributionUtil;

public class DistributionServiceImplTest {
	static String wsdl = "http://180.169.51.94/clutter/services/distributionService?wsdl";
//	static String wsdl = "http://192.168.0.238:8035/clutter/services/distributionService?wsdl";
//	static String wsdl = "http://192.168.0.243/clutter/services/distributionService?wsdl";
//	static String wsdl = "http://192.168.0.249:8035/clutter/services/distributionService?wsdl";
//	static String wsdl = "http://localhost/Super_clutter/services/distributionService?wsdl";
	//线上地址
//	static String wsdl="http://114.80.83.165/clutter/services/distributionService?wsdl"; 
//	static String wsdl = "http://super.lvmama.com/clutter/services/distributionService?wsdl";
//	static String wsdl = "http://180.169.51.94/clutter/services/distributionService?wsdl";
	@Test
	public void testCreateOrder()throws Exception {
		String xmlStr = this.getXmlStr("createOrder.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "createOrder");
		String result = obj[0].toString();
		System.out.println(result);
	}
	
	@Test
	public void testGetOrder() throws Exception {
		String xmlStr = this.getXmlStr("getOrder.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "getOrder");
		String result = obj[0].toString();
		System.out.println(result);
	}

	@Test
	public void testGetProductInfo() throws Exception{
		String xmlStr = this.getXmlStr("getProductInfo.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "getProductInfo");
		String result = obj[0].toString();
		System.out.println(result);
	}

	@Test
	public void testGetProductPrice() throws Exception{
		String xmlStr = this.getXmlStr("getProductPrice.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "getProductPrice");
		String result = obj[0].toString();
		System.out.println(result);
		OutputStream out =  new FileOutputStream("d:/222.text");
		out.write(DistributionUtil.decode(result));
		out.flush();
	}

	@Test
	public void testProductInfoList() throws Exception{
		String xmlStr = this.getXmlStr("productInfoList.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "productInfoList");
		String result = obj[0].toString();
		System.out.println(result);
	}

	@Test
	public void testProductPriceList() throws Exception{
		String xmlStr = this.getXmlStr("productPriceList.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[] { xmlStr }, "productPriceList");
		String result = obj[0].toString();
		System.out.println(result);
	}

	@Test
	public void testResendCode() throws Exception{
		String xmlStr = this.getXmlStr("resendCode.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "resendCode");
		String result = obj[0].toString();
		System.out.println(result);
	}

	@Test
	public void testUpdateOrderStatus()throws Exception {
		String xmlStr = this.getXmlStr("updateOrderStatus.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "updateOrderStatus");
		String result = obj[0].toString();
		System.out.println(result);
	}
	
	@Test
	public void testGetProductOnline()throws Exception {
		String xmlStr = this.getXmlStr("getProductOnLine.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[]{xmlStr}, "getProductOnLine");
		String result = obj[0].toString();
		System.out.println(result);
	}
	/**
	 * 订单状态审核
	 * @throws Exception
	 */
	@Test
	public void testGetOrderApprove() throws Exception {
		String xmlStr = this.getXmlStr("getOrderApprove.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[] { xmlStr }, "getOrderApprove");
		String result = obj[0].toString();
		System.out.println(result);
	}
	/**
	 * 订单验证
	 */
	@Test
	public void testValidateOrder() throws Exception {
		String xmlStr = this.getXmlStr("validateOrder.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[] { xmlStr }, "validateOrder");
		String result = obj[0].toString();
		System.out.println(result);
	}
	/**
	 * 状态验证回调
	 * @throws Exception
	 */
	@Test
	public void orderApproveCallBack() throws Exception {
		String xmlStr = this.getXmlStr("orderApproveCallBack.xml");
		Object[] obj = WebServiceClient.getClientInstance().execute(wsdl, new Object[] { xmlStr }, "orderApproveCallBack");
		String result = obj[0].toString();
		System.out.println(result);
	}
	
	
	String getXmlStr(String fileName) throws Exception{
		InputStream inputStream = this.getClass().getClassLoader().getResourceAsStream("com/lvmama/clutter/service/impl/"+fileName);
		SAXReader reader = new SAXReader();
		org.dom4j.Document document = reader.read(inputStream);
		return document.asXML();
	}
	@Test
	public void testdecode(){
		//String str="PG9yZGVyTGlzdD48b3JkZXI+PG9yZGVySWQ+MTMwNjYzNDwvb3JkZXJJZD48c3RhdHVzPnRydWU8L3N0YXR1cz48d2FpdFBheW1lbnQ+MjAxMy0wMS0wNCAxNTowMjwvd2FpdFBheW1lbnQ+PC9vcmRlcj48L29yZGVyTGlzdD4=";
				//"PG9yZGVyTGlzdD48b3JkZXI+PG9yZGVySWQ+MTMwNjYzNDwvb3JkZXJJZD48c3RhdHVzPnRydWU8L3N0YXR1cz48d2FpdFBheW1lbnQ+MjAxMy0wMS0wNCAxNTowMjwvd2FpdFBheW1lbnQ+PC9vcmRlcj48L29yZGVyTGlzdD4=";
		String str="";
		System.out.println(new String(DistributionUtil.decode(str)));
	}

	public static void main(String[] args) {
		try {
			System.out.println(MD5.encode("be921c54cbc34ed6ac1a5b0572fbf1073816025816334055554445544412013-07-25测试13121026269360429199204241517ID_CARD测试13121026269360429199204241517ID_CARD"));
		} catch (NoSuchAlgorithmException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Test
	public void test() throws Exception{/*
		String url="http://localhost/clutter/jingdong/testPush.do";
		String xml = this.getXmlStr("orderApproveCallBack.xml");
		HttpClient http=new HttpClient();
		http.sendStream(xml, url);
	*/}
}
