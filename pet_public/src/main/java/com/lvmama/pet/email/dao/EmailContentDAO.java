package com.lvmama.pet.email.dao;

import java.util.List;
import java.util.Map;

import com.lvmama.comm.BaseIbatisDAO;
import com.lvmama.comm.pet.po.email.EmailContent;

public class EmailContentDAO extends BaseIbatisDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table LVMAMA_SUPER.EMAIL_CONTENT
     *
     * @abatorgenerated Thu Aug 02 16:45:15 CST 2012
     */
    public void insert(EmailContent record) {
        super.insert("EMAIL_CONTENT.insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table LVMAMA_SUPER.EMAIL_CONTENT
     *
     * @abatorgenerated Thu Aug 02 16:45:15 CST 2012
     */
    public int updateByPrimaryKey(EmailContent record) {
        int rows = super.update("EMAIL_CONTENT.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table LVMAMA_SUPER.EMAIL_CONTENT
     *
     * @abatorgenerated Thu Aug 02 16:45:15 CST 2012
     */
    public int updateByPrimaryKeySelective(EmailContent record) {
        int rows = super.update("EMAIL_CONTENT.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table LVMAMA_SUPER.EMAIL_CONTENT
     *
     * @abatorgenerated Thu Aug 02 16:45:15 CST 2012
     */
    public EmailContent selectByPrimaryKey(Long contentId) {
        EmailContent key = new EmailContent();
        key.setContentId(contentId);
        EmailContent record = (EmailContent) super.queryForObject("EMAIL_CONTENT.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table LVMAMA_SUPER.EMAIL_CONTENT
     *
     * @abatorgenerated Thu Aug 02 16:45:15 CST 2012
     */
    public int deleteByPrimaryKey(Long contentId) {
        EmailContent key = new EmailContent();
        key.setContentId(contentId);
        int rows = super.delete("EMAIL_CONTENT.deleteByPrimaryKey", key);
        return rows;
    }
    
    public Long queryByParamCount(Map<String,Object> params){
    	return (Long)super.queryForObject("EMAIL_CONTENT.selectByParamsCount", params);
    }
    
    public List<EmailContent> queryByParamList(Map<String,Object> params){
    	return super.queryForList("EMAIL_CONTENT.selectByParamsList", params);
    }
    
    public List<EmailContent> getQueuedEmailList(Map<String,Object> params){
    	return super.queryForList("EMAIL_CONTENT.getQueuedEmailList", params);
    }
}